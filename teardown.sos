[global]
output_dirname = "metadata"
config_ec2_yml = f"{output_dirname}/config_with_ec2_host.yml"

cfg = CONFIG
print("CONFIG", cfg)


[200]
input: f"{config_ec2_yml}"

sh: expand=True
    sos run -c {_input} remote.sos stop -v4


[201]
input: f"{output_dirname}/ebs_volume.json"
depends: sos_step("200")

python: expand=True
    import json
    import ec2_setup

    with open("{_input}", "r") as fp:
        ebs_volume = json.load(fp)
        print("ebs_volume metadata loaded")

    ec2_setup.detach_volume(ebs_volume)
    print("ebs_volume now detached")


[202]
input: f"{output_dirname}/ec2_instance.json"
depends: sos_step("201")

python: expand=True
    import json
    import os
    import ec2_setup

    with open("{_input}", "r") as fp:
        ec2_instance = json.load(fp)
        print(f"ec2_instance metadata loaded")

    state = ec2_setup.terminate_instance(ec2_instance)

    if state == "shutting-down":
        os.remove("{_input}")
        print(f"ec2_instance now terminated and metadata deleted: {_input}")


[203]
input: f"{output_dirname}/ec2_hostname_data.txt"
depends: sos_step("202")

sh: expand=True
    rm {_input}
    

[204]
input: f"{config_ec2_yml}"
depends: sos_step("202")

sh: expand=True
    rm {_input}


[205]
input: f"{output_dirname}/ebs_volume.json"
depends: sos_step("202")

python: expand=True
    import json
    import os
    import ec2_setup

    with open("{_input}", "r") as fp:
        ebs_volume = json.load(fp)
        print(f"ebs_volume metadata loaded")

    cfg_str = "{cfg}"
    cfg = json.loads(cfg_str.replace("'", "\""))
    # TODO: improve this
    if "ebs" in cfg.keys() and "create_snapshot_before_deletion" in cfg["ebs"].keys():
        bool_str = cfg["ebs"]["create_snapshot_before_deletion"]
        should_create_snapshot = True if bool_str == "True" else False
    else: 
        should_create_snapshot = False

    if should_create_snapshot:
        snapshot_id = ec2_setup.create_snapshot(ebs_volume)
    
        # TODO: this should not be hardcoded
        snapshot_fname = "metadata/ebs_snapshot.json"
        with open(snapshot_fname, "w") as fp:
            json.dump(snapshot_id, fp)
            print("snapshot metadata saved:", snapshot_fname)

    ec2_setup.delete_volume(ebs_volume)
    os.remove("{_input}")
    print(f"ebs_volume and metadata now deleted: {_input}")
